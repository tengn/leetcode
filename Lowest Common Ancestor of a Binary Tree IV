/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    public TreeNode lowestCommonAncestor(TreeNode root, TreeNode[] nodes) {
        Set<Integer> data = new HashSet<>();
        for (TreeNode node : nodes) {
            data.add(node.val);
        }
        return help(root, data);
    }
    
    private TreeNode help(TreeNode root, Set<Integer> data) {
        if (root == null || data.contains(root.val)) {
            return root;
        }
        TreeNode left = help(root.left, data), right = help(root.right, data);
        if (left != null && right != null) {
            return root;
        } else if (left != null) {
            return left;
        } else {
            return right;
        }
    }
}
